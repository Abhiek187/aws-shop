name: CloudFormation CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "**.yaml"
      - ".github/workflows/cfn.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "**.yaml"
      - ".github/workflows/cfn.yml"

# Required to use the AWS CLI
permissions:
  id-token: write
  contents: read

jobs:
  # Read all the CloudFormation files and stack names and create a matrix
  get-templates:
    runs-on: ubuntu-latest

    outputs:
      cfn-info: ${{ steps.read-json.outputs.info }}

    steps:
      - uses: actions/checkout@v3

      - id: read-json
        run: echo "info=$(jq -c . < .github/workflows/cfn-info.json)" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: get-templates

    strategy:
      matrix:
        cfn-info: ${{ fromJson(needs.get-templates.outputs.cfn-info) }}

    steps:
      - name: Set Environment Variables
        run: |
          echo "STACK_NAME=${{ matrix.cfn-info.stack }}" >> "$GITHUB_ENV"
          echo "STACK_FILE=${{ matrix.cfn-info.file }}" >> "$GITHUB_ENV"

      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.GH_OIDC_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Validate CloudFormation Template
        run: aws cloudformation validate-template --template-body file://${{ env.STACK_FILE }}

      - name: Detect Stack Drift
        run: |
          chmod u+x detect-cfn-drift.sh
          ./detect-cfn-drift.sh

      - name: Install cfn-guard
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/aws-cloudformation/cloudformation-guard/main/install-guard.sh | sh
          echo "~/.guard/bin" >> "$GITHUB_PATH"

      # Run checks based on AWS's well-architected security & reliability pillars
      - name: Check for Vulnerabilities using cfn-guard
        run: >-
          cfn-guard validate --show-summary fail --output-format single-line-summary
          --data ${{ env.STACK_FILE }} --rules cfn-guard-rules/

  # If the tests were successful and we're pushing to main, create/update the stack
  deploy:
    runs-on: ubuntu-latest
    needs:
      - get-templates
      - build
    if: github.event_name == 'push'

    strategy:
      matrix:
        cfn-info: ${{ fromJson(needs.get-templates.outputs.cfn-info) }}

    steps:
      - name: Set Environment Variables
        run: |
          echo "STACK_NAME=${{ matrix.cfn-info.stack }}" >> "$GITHUB_ENV"
          echo "STACK_FILE=${{ matrix.cfn-info.file }}" >> "$GITHUB_ENV"
          echo "PARAM_FILE=${{ matrix.cfn-info.params }}" >> "$GITHUB_ENV"

      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.GH_OIDC_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.STACK_NAME }}
          template: ${{ env.STACK_FILE }}
          parameter-overrides: file://${{ github.workspace }}/${{ env.PARAM_FILE }}
          no-fail-on-empty-changeset: "1"
          capabilities: CAPABILITY_NAMED_IAM
