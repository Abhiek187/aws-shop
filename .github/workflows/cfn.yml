name: CloudFormation CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "**.yaml"
      - ".github/workflows/cfn.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "**.yaml"
      - ".github/workflows/cfn.yml"

env:
  AWS_REGION: us-east-1
  STACK_NAME: AWS-Shop-Frontend-Stack
  STACK_FILE: cloudformation.yaml
  CHANGE_SET: Change-Set

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::701157632481:role/AWS-Shop-Frontend-Stack-GitHubRole-O5NTO5LBPHMZ
          aws-region: ${{ env.AWS_REGION }}

      - run: aws --version && aws sts get-caller-identity

      - name: Validate CloudFormation Template
        run: aws cloudformation validate-template --template-body file://${{ env.STACK_FILE }}

      - name: Detect Stack Drift
        run: |
          chmod u+x detect-cfn-drift.sh
          ./detect-cfn-drift.sh

      - name: Check for Vulnerabilities using cfn-guard
        uses: grolston/guard-action@main
        with:
          data_directory: "."
          # Run checks based on AWS's well-architected security pillar
          rule_set: "wa-Security-Pillar"

  # If the tests were successful and we're pushing to main, create/update the stack
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::701157632481:role/AWS-Shop-Frontend-Stack-GitHubRole-O5NTO5LBPHMZ
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.STACK_NAME }}
          template: ${{ env.STACK_FILE }}
