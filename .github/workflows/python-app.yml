# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "microservices/iam-old/**"
      - "microservices/shop-app/**"
      - ".github/workflows/python-app.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "microservices/iam-old/**"
      - "microservices/shop-app/**"
      - ".github/workflows/python-app.yml"

permissions:
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./microservices/store

    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]
        # See supported Python release schedule at https://devguide.python.org/versions/

    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - run: sam --version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pytest

  # If the tests were successful and we're pushing to main, deploy using SAM
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      # Build inside Docker containers
      - run: sam build --use-container
      # Prevent prompts and failure when the stack is unchanged
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
