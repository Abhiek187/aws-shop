AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
#Globals
Description: >-
  A stack that sends a reminder to users whenever their access key needs to be rotated
#Metadata
Parameters:
  Email:
    Type: String
    Description: The email address that will receive SNS notifications for the access keys
    # Simple regex from https://stackoverflow.com/a/201378
    AllowedPattern: "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
#Rules
#Mappings
#Conditions
Resources:
  LambdaFunction:
    # Creates AWS::Lambda::Permission/Function, AWS::IAM::Role
    Type: AWS::Serverless::Function
    Metadata:
      guard:
        SuppressedRules:
          # Reliability suppressions
          - LAMBDA_CONCURRENCY_CHECK # save costs
          - LAMBDA_INSIDE_VPC # no VPC created (also security check)
          # Security suppressions
          - IAM_NO_INLINE_POLICY_CHECK # SAM policy templates become inline policies
    Properties:
      # Zip files run faster than container images (setting PackageType causes false drift)
      CodeUri: src/
      Handler: app.handler
      Runtime: python3.12 # see https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html
      Architectures:
        - arm64
      Description: Check the age of access keys for IAM users and send emails to an SNS topic
      Events:
        ScheduleEvent:
          # Schedule = AWS::Events::Rule, ScheduleV2 = AWS::Scheduler::Schedule
          Type: ScheduleV2
          Properties:
            DeadLetterConfig:
              Arn: !GetAtt SchedulerDLQ.Arn # applies the necessary resource-based policy
            Description: Check the age of access keys every day
            # You can't use * in both day-of-month [3] and day-of-week [5]
            # https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html#cron-based
            ScheduleExpression: "cron(0 0 * * ? *)" # run every day at midnight UTC
            State: ENABLED
      FunctionName: iam-old-handler
      Policies:
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
        # SAM policy templates:
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt SNSTopic.TopicName
      # 128 MB of memory allocated by default
      # Automatically update the runtime version
      # Timeout after 3 seconds
      Environment:
        Variables:
          TopicArn: !Ref SNSTopic
      Tracing: Active
      DeadLetterQueue:
        TargetArn: !GetAtt LambdaDLQ.Arn # automatically applies permissions to the execution role
        Type: SQS
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      # Encrypt using the default SNS SSE key
      # Key aliases: aws kms list-aliases
      KmsMasterKeyId: alias/aws/sns
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email
      TopicName: RotateAccessKeys
  SNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: "*"
            Action: sns:Publish
            Resource: !Ref SNSTopic
            Condition:
              Bool:
                "aws:SecureTransport": false
      Topics:
        - !Ref SNSTopic
  SchedulerDLQ:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 345600
      ReceiveMessageWaitTimeSeconds: 5
      SqsManagedSseEnabled: true
  LambdaDLQ:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 345600
      ReceiveMessageWaitTimeSeconds: 5
      SqsManagedSseEnabled: true
Outputs:
  SNSTopicArn:
    Description: SNS Topic ARN
    Value: !Ref SNSTopic
  SchedulerDLQURL:
    Description: DLQ URL for EventBridge
    Value: !Ref SchedulerDLQ
  LambdaDLQURL:
    Description: DLQ URL for Lambda
    Value: !Ref LambdaDLQ
